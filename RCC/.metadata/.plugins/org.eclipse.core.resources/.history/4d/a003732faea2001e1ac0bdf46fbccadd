/*
************************************************************************************************************************************

*****************************   author: Ahmed Dewidar

*****************************   Date: 08/10/2023

*****************************   Module: RCC

*****************************   Layer: Mcal

************************************************************************************************************************************
*/
#include"RCC.h"
#include"RCC_cfg.h"
#include"RCC_prv.h"


/*
************************************************************************************************************************************
name                : RCC_voidInitSysClock
description         : initialize system clock
synch/asynch        : synch
parameters          : void
return              : void
************************************************************************************************************************************
*/
void RCC_voidInitSysClock(void)
{

}
/*
************************************************************************************************************************************
name                : RCC_voidInitSysClock
description         : initialize system clock
synch/asynch        : synch
parameters          : void
return              : void
************************************************************************************************************************************
*/
RCC_errorStatus RCC_u8EnablePerClock(u8 copy_u8BusId,u8 copy_u8perId)
{
	RCC_T RCC;

	RCC_errorStatus RCC_returnStatus = RCC_OK;

	switch(copy_u8BusId)
	{
	case RCC_AHB:
		SET_BIT(RCC ->RCC_AHBENR,copy_u8perId);
		break;
	case RCC_APB1:
		SET_BIT(RCC ->RCC_APB1ENR,copy_u8perId);
		break;
	case RCC_APB2:
		SET_BIT(RCC ->RCC_APB2ENR,copy_u8perId);
		break;
	default :
		RCC_returnStatus = RCC_WRONGBUS;
		break;

		return RCC_returnStatus;
	}
}
/*
************************************************************************************************************************************
name                : RCC_voidInitSysClock
description         : initialize system clock
synch/asynch        : synch
parameters          : void
return              : void
************************************************************************************************************************************
*/
RCC_errorStatus RCC_u8DisablePerClock(u8 copy_u8BusId,u8 copy_u8perId)
{
	RCC_T RCC;

	RCC_errorStatus RCC_returnStatus = RCC_OK;

	switch(copy_u8BusId)
	{
	case RCC_AHB:
		SET_BIT(RCC ->RCC_AHBENR,copy_u8perId);
		break;
	case RCC_APB1:
		SET_BIT(RCC ->RCC_APB1ENR,copy_u8perId);
		break;
	case RCC_APB2:
		CLEAR_BIT(RCC ->RCC_APB2ENR,copy_u8perId);
		break;
	default :
		RCC_returnStatus = RCC_WRONGBUS;
		break;

		return RCC_returnStatus;
	}
}
